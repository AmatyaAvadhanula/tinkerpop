<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>tinkerpop</artifactId>
        <version>3.6.1-SNAPSHOT</version>
    </parent>
    <artifactId>gremlin-go</artifactId>
    <name>Apache TinkerPop :: Gremlin Go</name>
    <properties>
        <!-- provides a way to convert maven.test.skip value to skipTests for use in skipping go tests -->
        <maven.test.skip>false</maven.test.skip>
        <skipTests>${maven.test.skip}</skipTests>
        <TEST_TRANSACTIONS>false</TEST_TRANSACTIONS>
        <gremlin.server.dir>${project.parent.basedir}/gremlin-server</gremlin.server.dir>
    </properties>
    <build>
        <plugins>
            <!--
            there is no point to building/deploying the jvm stuff - there is no java source really - just poms
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <skipSource>true</skipSource>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Activates the testing of Go Docker -->
        <profile>
            <id>glv-go</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>.glv</exists>
                </file>
            </activation>
            <build>
                <directory>${basedir}/target</directory>
                <finalName>${project.artifactId}-${project.version}</finalName>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>run integration tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <!-- tests pass, but there is some trouble running these in docker/build.sh
                                         as docker-compose isn't a command available in that image. skipping until
                                         resolved -->
                                    <skip>true</skip>
                                    <executable>docker-compose</executable>
                                    <arguments>
                                        <argument>up</argument>
                                        <argument>--exit-code-from</argument>
                                        <argument>gremlin-go-integration-tests</argument>
                                        <argument>gremlin-go-integration-tests</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run godog tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <!--
                                    TODO: Temporarily skip until some gherkin issues are sorted here for 3.6.x:
                                    1. gherkin syntax now includes exception assertions with:
                                       - Then the traversal will raise an error
                                       - Then the traversal will raise an error with message <containing|starting|ending> text of "<expected-message>"
                                    2. There is now a test that includes some unicode - "g_V_hasXname_regexXTinkerUnicodeXX" and that seems to lead to compilation failures:
                                       gremlin-go-godog-tests          | Error: failed to compile tested package: /go_app/cucumber, reason: exit status 2, output: WORK=/tmp/go-build4146811523
                                       gremlin-go-godog-tests          | # gremlin-godog-tests [gremlin-godog-tests.test]
                                       gremlin-go-godog-tests          | ./gremlin.go:192: syntax error: unexpected *, expecting name or (
                                       gremlin-go-godog-tests          | ./gremlin.go:192: invalid character U+00A9 'Â©' in identifier
                                       gremlin-go-godog-tests          | ./gremlin.go:983:151: syntax error: unexpected literal 0, expecting comma or )
                                       gremlin-go-godog-tests          | ./gremlin.go:984:160: syntax error: unexpected literal 0, expecting comma or )
                                    -->
                                    <skip>true</skip>
                                    <executable>docker-compose</executable>
                                    <arguments>
                                        <argument>up</argument>
                                        <argument>--exit-code-from</argument>
                                        <argument>gremlin-go-godog-tests</argument>
                                        <argument>gremlin-go-godog-tests</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>shutdown container</id>
                                <phase>verify</phase>
                                <configuration>
                                    <!-- tests pass, but there is some trouble running these in docker/build.sh
                                         as docker-compose isn't a command available in that image. skipping until
                                         resolved -->
                                    <skip>true</skip>
                                    <executable>docker-compose</executable>
                                    <arguments>
                                        <argument>down</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.tinkerpop</groupId>
                                <artifactId>gremlin-server</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.tinkerpop</groupId>
                                <artifactId>gremlin-test</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.tinkerpop</groupId>
                                <artifactId>gremlin-language</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.tinkerpop</groupId>
                                <artifactId>neo4j-gremlin</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>${groovy.version}</version>
                                <type>pom</type>
                                <scope>runtime</scope>
                            </dependency>
                            <dependency>
                                <groupId>ch.qos.logback</groupId>
                                <artifactId>logback-classic</artifactId>
                                <version>${logback.version}</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>generate-radish-support</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <properties>
                                        <property>
                                            <name>projectBaseDir</name>
                                            <value>${project.basedir}/../</value>
                                        </property>
                                    </properties>
                                    <scripts>
                                        <script>${project.basedir}/build/generate.groovy</script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
